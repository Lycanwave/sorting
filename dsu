class DSU{

  int capacity;
  vector<int> parent;
  vector<int> rank;
public:

  DSU(int capacity){
    this->capacity = capacity;
    parent.resize(capacity);
    rank.resize(capacity);
    for(int i=0;i<parent.size();i++){
      parent[i] = i;
    }

  }

  int findParent(int node){

    if(parent[node] == node)
      return node;

    return parent[node] = findParent(parent[node]);
  }

  void add(int u, int v){

    int a = findParent(u);
    int b = findParent(v);

    if(a == b)
      return ;

    if(rank[a] > rank[b]){
      parent[b] = a;
    } else if(rank[b] > rank[a]){
      parent[a] = b;
    } else {
      parent[b] = a;
      rank[a]++;
    }
  }

  vector<int> getParent(){
    return parent;
  }


};
